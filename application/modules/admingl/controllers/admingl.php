<?php/* * To change this template, choose Tools | Templates * and open the template in the editor. */    class Admingl extends MY_Controller{                        function __construct() {            parent::__construct();            $this->load->model('MAdmingl');            $this->load->model('category/Mcategory');        }                function index(){            $data['email'] = 'phanvannhien@gmail.com';            $task = $this->uri->segment(2);                        switch ($task){                case 'category':                    $this->category();                case 'user':                    $this->user();                    break;                 case 'customer':                    $this->customer();                    break;                default :                    $this->category();                                        break;            }                               }                         // <editor-fold defaultstate="collapsed" desc="CATEGORY">        function category() {                if ($this->input->get_post('task')) {                        $task = $this->input->get_post('task', TRUE);                        switch ($task) {                                case 'add':                                        $this->insert_category();                                        break;                                case 'update':                                        $this->update_category();                                        break;                                default :                                        $this->list_category();                                        break;                        }                }                else {                        $this->list_category();                }        }                function ajax_category() {                $task = $this->input->get_post('task', TRUE);                switch ($task) {                        case 'load_form_add':                                $this->ajax_load_form_add_category();                                break;                        case 'load_form_edit':                                $this->ajax_load_form_edit_category();                                break;                        case 'delete':                                $this->ajax_delete_category();                                break;                        default :                                $this->ajax_load_one_category();                                break;                }                echo json_encode($this->o_response);        }                function list_category($selected_category_id = '0') {                if ($this->input->get_post('category_id')) {                        $selected_category_id = $this->input->get_post('category_id');                }                $categories        = $this->Mcategory->getAll();                $data['selected_category_id'] = $selected_category_id;                $data['main_view']            = 'category';                $this->load->view('board', $data);        }                                                                                             function ajax_load_form_add_category() {                $task               = $this->input->get_post('task', TRUE);                $category_id        = $this->input->get_post('category_id', TRUE);                $parent_category_id = $category_id;                $array_where        = array("category_id"    => $category_id);                $category        = $this->Mcategory->getOneRow($array_where);                $parent_category = new stdClass();                if ($parent_category_id == 0) {                        $parent_category->category_id   = 0;                        $parent_category->category_name = 'root';                }                else {                        $parent_category->category_id   = $parent_category_id;                        $parent_category->category_name = $category->category_name;                }                $data['parent_category']   = $parent_category;                $data['task']              = $task;                $this->o_response->content = $this->load->view('category_update_form', $data, TRUE);        }                function ajax_load_form_edit_category(){                                                                 $task        = $this->input->get_post('task', TRUE);                $category_id = $this->input->get_post('category_id', TRUE);                $array_where1 = array("category_id" => $category_id);                $category     = $this->Mcategory->getOneRow($array_where1);                                $data['category'] = $category;                $data['task']     = $task;                                if($category->parent_id != 0){                        $array_where2 = array("category_id"    => $category->parent_id);                        $parent_category = $this->Mcategory->getOneRow($array_where2);                        $data['parent_category']   = $parent_category;                }else{                        $obj_parent = new stdClass() ;                        $obj_parent->category_id = 0;                                                $obj_parent->category_name = 'root';                                                $data['parent_category'] = $obj_parent;                }                                                $this->o_response->content = $this->load->view('category_update_form', $data, TRUE);        }                function ajax_load_one_category() {                if (!$this->input->get_post('category_id', TRUE)) {                        $this->o_response->errors = 'No Category was choosen!';                } else {                        $category_id = $this->input->get_post('category_id', TRUE);                        $array_where = array("category_id" => $category_id);                        $category                  = $this->Mcategory->getOneRow($array_where);                        $data['rows']              = $category;                        $this->o_response->content = $this->load->view('category_list', $data, TRUE);                }        }                function ajax_delete_category() {                $category_id = '';                if ($this->input->get_post('category_id')) {                        $category_id  = $this->input->get_post('category_id');                        $array_where1 = array('category_id' => $category_id);                        $category     = $this->Mcategory->getOneRow($array_where1);                        $array_where2 = array('parent_id'   => $category_id);                        $sub_category = $this->Mcategory->getOneRow($array_where2);                        if (empty($category)) {                                $this->o_response->response = 'error';                                $this->o_response->content  = "Could not delete this category";                        }else if (!empty($sub_category)) {                                $this->o_response->response = 'error';                                $this->o_response->content  = "Could not delete because the categogy have sub category";                        }else {                                $this->Mcategory->delete($array_where1);                                $this->o_response->category_name = $category->category_name;                                $this->o_response->parent_id     = $category->parent_id;                        }                }        }                function insert_category() {                $this->do_upload();                $upload_data = $this->upload->data();                $array = array(                    'category_name' => $this->input->get_post('cat_name', TRUE),                    'parent_id'     => $this->input->get_post('cat_parent', TRUE),                    'category_des'  => $this->input->get_post('cat_des', TRUE),                    'category_img'  => $upload_data['file_name'],                );                $this->Mcategory->insert($array);                $last_insert_category_id = $this->db->insert_id();                redirect('/admingl/category/?category_id=' . $last_insert_category_id);        }                                        function update_category(){                $category_id = $this->input->get_post('category_id');                if (!empty($_FILES['image']['tmp_name'])) {                        $this->do_upload();                        $upload_data = $this->upload->data();                        $array       = array(                            'category_name' => $this->input->get_post('cat_name', TRUE),                            'parent_id'     => $this->input->get_post('cat_parent', TRUE),                            'category_des'  => $this->input->get_post('cat_des', TRUE),                            'category_img'  => $upload_data['file_name'],                        );                }                else {                        $array = array(                            'category_name' => $this->input->get_post('cat_name', TRUE),                            'parent_id'     => $this->input->get_post('cat_parent', TRUE),                            'category_des'  => $this->input->get_post('cat_des', TRUE)                        );                }                $condition = array('category_id' => $category_id);                $this->Mcategory->update($array, $condition);                redirect('/admingl/category/?category_id=' . $category_id);        }                        function do_upload() {                $config['upload_path']   = './uploads/';                $config['allowed_types'] = 'gif|jpg|png';                $config['max_size']      = '300';                $config['max_width']     = '1024';                $config['max_height']    = '768';                $this->load->library('upload', $config);                if (!$this->upload->do_upload('image')) {                        echo $this->upload->display_errors();                        exit;                }        }       // </editor-fold>                                        // <editor-fold defaultstate="collapsed" desc="Recycle">                        /*function export_tree_category(){                                        $node = '';//                        if($this->input->get_post('node')){                             $node = $this->input->get_post('node');                           }                        if($node =='-1'){                             echo "<ul class=\"jqueryFileTree\" style=\"display: none;\">";                                echo "<li class=\"directory collapsed\"><a href=\"#\" rel=\"0\">Root</a></li>";                               echo "</ul>";                              exit;                        }                        $array_where        = array("parent_id" => $node);                        $categories         = $this->MAdmingl->getInfoByID(DBPREFIX . 'categories', $array_where);                        echo "<ul class=\"jqueryFileTree\" style=\"display: none;\">";                        foreach ($categories as $category){                                $array_where2        = array("parent_id" => $category->category_id);                                $sub_categories         = $this->MAdmingl->getInfoByID(DBPREFIX . 'categories', $array_where2);                                if(count($sub_categories)>0){                                                                        echo "<li class=\"directory collapsed\"><a href=\"#\" rel=\"$category->category_id\">" . htmlentities($category->category_name) . "</a></li>";                                                                }else{                                        echo "<li class=\"file ext_\"><a href=\"#\" rel=\"$category->category_id\">". htmlentities($category->category_name) . "</a></li>";                                }                        }                                                        echo "</ul>";                }*/                                                /*function export_tree_category(){                        $root='../namviet/';                       $_POST['dir'] = urldecode($_POST['dir']);                        if( file_exists($root . $_POST['dir']) ) {                                $files = scandir($root . $_POST['dir']);                                natcasesort($files);                                if( count($files) > 2 ) { // The 2 accounts for . and ..                                         echo "<ul class=\"jqueryFileTree\" style=\"display: none;\">";                                        // All dirs                                        foreach( $files as $file ) {                                                if( file_exists($root . $_POST['dir'] . $file) && $file != '.' && $file != '..' && is_dir($root . $_POST['dir'] . $file) ) {                                                        echo "<li class=\"directory collapsed\"><a href=\"#\" rel=\"" . htmlentities($_POST['dir'] . $file) . "/\">" . htmlentities($file) . "</a></li>";                                                }                                        }                                        // All files                                        foreach( $files as $file ) {                                                if( file_exists($root . $_POST['dir'] . $file) && $file != '.' && $file != '..' && !is_dir($root . $_POST['dir'] . $file) ) {                                                        $ext = preg_replace('/^.*\./', '', $file);                                                        echo "<li class=\"file ext_$ext\"><a href=\"#\" rel=\"" . htmlentities($_POST['dir'] . $file) . "\">" . htmlentities($file) . "</a></li>";                                                }                                        }                                        echo "</ul>";	                                }                        }                 }*/// </editor-fold>                               }?>